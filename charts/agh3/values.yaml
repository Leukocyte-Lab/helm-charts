## Default values for AGH3.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

global:
  ## @section Image Registry parameters
  ## @param global.imageRegistry Global Docker Image registry
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  ##
  imageRegistry: "registry.lkc-lab.com"
  imagePullSecrets:
    - lkc-registry
  ## @section Proxy parameters
  ## @param global.proxy.enabled Enable the use of a proxy
  ## @param global.proxy.httpProxy HTTP Proxy server (ex: http://user:password@proxy.example.com:1080)
  ## @param global.proxy.httpsProxy HTTPS Proxy server (ex: https://user:password@proxy.example.com:4380)
  ## @param global.proxy.noProxy No Proxy targets (ex: 127.0.0.0/8,10.0.0.0/8)
  ##
  proxy:
    enabled: false
    httpProxy: ""
    httpsProxy: ""
    noProxy: ""
  ## @section Common parameters
  ## @param global.storageClass Global storage class for dynamic provisioning
  ## @param global.volumePermissions.enabled Enable init container that changes the owner and group of the persistent volume(s) mountpoint to `runAsUser:fsGroup`
  storageClass: ""
  volumePermissions:
    enabled: true
  ## @section Security parameters
  ## @param global.security.allowInsecureImages Allow unrecognized images, this is be use for `grafana-tempo/charts/memcached/templates/NOTES.txt` warning
  security:
    allowInsecureImages: true
## @section crds parameters
##
crds:
  ## @param crds.volume.name Name of the volume
  ##
  volume:
    name: crd-volume
  ## @param crds.job.name Name of the job
  ## @param crds.job.image.repository Image repository
  ## @param crds.job.image.tag Image tag
  ## @param crds.job.image.pullPolicy Image pull policy
  ## @param crds.job.image.pullSecrets Image pull secrets
  ## @param crds.job.serviceAccount.name Name of the service account
  ##
  job:
    name: actions-crd-job
    image:
      repository: docker/bitnami/kubectl
      tag: 1.28.15-debian-12-r5
      pullPolicy: IfNotPresent
      pullSecrets: []
    serviceAccount:
      name: actions-crds-job-sa
  ## @param crds.cm.name Name of the config map
  ##
  cm:
    name: actions-crd
## @section Common parameters
##

## @param customRegistrySecret.enabled Enable custom registry secret generation
##
customRegistrySecret:
  ## @skip customRegistrySecret.secretName
  ## Name of the generated secret
  ## !!! DO NOT CHANGE IF YOU DON'T KNOW WHAT YOU ARE DOING !!!
  ##
  secretName: lkc-registry
  enabled: true
  ## @param customRegistrySecret.auth.registry URL of the registry server
  ## @param customRegistrySecret.auth.username Username to authenticate with the registry server
  ## @param customRegistrySecret.auth.password Password to authenticate with the registry server
  auth:
    registry: registry.lkc-lab.com
    username: ""
    password: ""
## @section Keygen parameters
##

## @param keygen.enabled Enable secret generate for keygen
## @param keygen.secretName Secret name for keygen
## @param keygen.apiToken Keygen API Token
## @param keygen.accountID Keygen Account ID
## @param keygen.url Keygen Endpoint URL
## ref: https://keygen.sh/docs/api
##
keygen:
  ## @skip keygen.secretName
  ## Name of the generated secret
  ## !!! DO NOT CHANGE IF YOU DON'T KNOW WHAT YOU ARE DOING !!!
  ##
  secretName: keygen-secret
  enabled: true
  apiToken: ""
  accountID: ""
  url: "https://api.keygen.sh"
## @param ingress.enabled Enable ingress controller
## @param ingress.host Ingress hostname
##
ingress:
  enabled: true
  host: app.argushack.com
  ## @section TLS parameters
  ##
  tls:
    ## @param ingress.tls.enabled Enable TLS certificate generation
    ## @param ingress.tls.secretName Name of the generated secret
    ## @param ingress.tls.cert Server certificate content
    ## @param ingress.tls.key Server private key content
    ##
    enabled: false
    secretName: agh-tls
    cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUUwakNDQkhpZ0F3SUJBZ0lSQU5jRVNiK2E0M0NQeE85Sm9rWVdUcWt3Q2dZSUtvWkl6ajBFQXdJd2dZOHgKQ3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEVlFRSUV4SkhjbVZoZEdWeUlFMWhibU5vWlhOMFpYSXhFREFPQmdOVgpCQWNUQjFOaGJHWnZjbVF4R0RBV0JnTlZCQW9URDFObFkzUnBaMjhnVEdsdGFYUmxaREUzTURVR0ExVUVBeE11ClUyVmpkR2xuYnlCRlEwTWdSRzl0WVdsdUlGWmhiR2xrWVhScGIyNGdVMlZqZFhKbElGTmxjblpsY2lCRFFUQWUKRncweU1qQTFNVEV3TURBd01EQmFGdzB5TXpBME1URXlNelU1TlRsYU1Cd3hHakFZQmdOVkJBTVRFV0Z3Y0M1aApjbWQxYzJoaFkyc3VZMjl0TUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUUwR0N3LzRkeHR1Y1U5Z0hXCmorc2xCcHlvVDY1MHF6b2s2bVhxbUIwL3IxbGtqVE1ydVkvbnhyd2p4ZXFYZTlZejJtSkVjazBFZTdYcWV4Y2YKL0FPVXg0bUlrQmJyTTZUZHp3UVJtcUxabUl1SjFEYWI3bkk0UXNwdXZ2U3RQV3dmbzRJRENEQ0NBd1F3SHdZRApWUjBqQkJnd0ZvQVU5b1VLT3hHRzRRUjlEcW9MTE5MdXpHUjdlNjR3SFFZRFZSME9CQllFRkJVUDh1RHZaK042Ci9qUFJsa2hzZWFQMDRLeVlNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWQKSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakJKQmdOVkhTQUVRakJBTURRR0N5c0dBUVFCc2pFQgpBZ0lITUNVd0l3WUlLd1lCQlFVSEFnRVdGMmgwZEhCek9pOHZjMlZqZEdsbmJ5NWpiMjB2UTFCVE1BZ0dCbWVCCkRBRUNBVENCaEFZSUt3WUJCUVVIQVFFRWVEQjJNRThHQ0NzR0FRVUZCekFDaGtOb2RIUndPaTh2WTNKMExuTmwKWTNScFoyOHVZMjl0TDFObFkzUnBaMjlGUTBORWIyMWhhVzVXWVd4cFpHRjBhVzl1VTJWamRYSmxVMlZ5ZG1WeQpRMEV1WTNKME1DTUdDQ3NHQVFVRkJ6QUJoaGRvZEhSd09pOHZiMk56Y0M1elpXTjBhV2R2TG1OdmJUQXpCZ05WCkhSRUVMREFxZ2hGaGNIQXVZWEpuZFhOb1lXTnJMbU52YllJVmQzZDNMbUZ3Y0M1aGNtZDFjMmhoWTJzdVkyOXQKTUlJQmZBWUtLd1lCQkFIV2VRSUVBZ1NDQVd3RWdnRm9BV1lBZFFDdDk3NzZmUDhReUl1ZFBad2VQaGhxdEdjcApYYyt4RENUS2hZWTA2OXlDaWdBQUFZQ3lYcUdRQUFBRUF3QkdNRVFDSUgwK3g4ZFR6YXEvaUJaeUU3L2pBSW5lCjJnSGhyT0tiYjBvZnZnMkYzKzhuQWlCaVZIZFV6cWZVL21vR0RyNEJLZk9BbWM0MHJWc0plSHZWWFVycjYrcGEKVUFCMUFIb3lqRlRZdHkyMklPbzQ0RkllNllRV2NESVRoVTA3MGl2Qk9sZWpVdXRTQUFBQmdMSmVvYmdBQUFRRApBRVl3UkFJZ085czRoV1U5cTZTZXBKZ0d5L21CN2xjejBqUmFBVVRtcmdocnhYYXgvZkFDSUJzSnNHeDJkaTExCnV6SEhxbUNUMXpBNUdkem9QTnlQbGxTK3hqWEl5WEpuQUhZQTZEN1EyajcxQmpVeTUxY292SWxyeVFQVHk5RVIKYSt6cmFlRjNmVzBHdlc0QUFBR0FzbDZoY2dBQUJBTUFSekJGQWlCb1FwT1BvUjVuWEpDMW95VjJseDRqK2hCagpxSnRjVW5sRll6d1lOSklDS0FJaEFMdDVTUjlXNGpKbitlNjhINEl4eU9ab1Evd2RlZEVaNVNUYUpzUHA3dDdKCk1Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lRRGNwQ0RqZjdwSEN4ekxNNW5XclpqQzMxS1MzanB5eVFreXNnbFEKZng0cG9BSWdKZE5qR2hsYkZqaHRWTFRCK1cyNkFNRVMveUMxSFZjeTh6STY4RWwzREdnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
    key: ""
## @section Database parameters
db:
  connection:
    ## @param db.connection.type Choose to use external DB or internal DB
    ## internal` or `external` in string
    ## Set `db.image` when internal is in use
    ##
    type: internal
    ## @param db.connection.driver Database driver
    ##
    driver: postgresql
    ## @param db.connection.host Database host address
    ## IP or FQDN in string
    ## Required if `db.type` is external, ignored if internal
    ##
    host: database.example.com
    ## @param db.connection.port Database host port
    ## Port in number
    ##
    port: 5432
    ## @param db.connection.user Database user
    ## DB User in string
    ##
    user: argushack
    ## @param db.connection.password Database password
    ## DB Password in string
    ##
    password: ""
    ## @extra db.connection.options Database connection options
    ## @param db.connection.options.disableSSL Disable SSL connection
    ##
    options:
      disableSSL: true
  ## @param db.internal.enabled Enable internal database
  ##
  internal:
    enabled: true
  ## @section Helper parameters
  ## @descriptionStart
  ## Control the DB Helper behaviors.
  ## @descriptionEnd
  ##

  ## @param db.helpers.init.dbs.enabled Enable dbs init feature
  ##
  helpers:
    init:
      dbs:
        enabled: true
        ## @skip db.helpers.init.dbs.forceProvision
        ## Force provision the DB
        ## !!! DO NOT CHANGE IF YOU DON'T KNOW WHAT YOU ARE DOING !!!
        ##
        forceProvision: false
## @section Internal Postfix provisioning parameters
## @descriptionStart
## Leave as default if using external Postfix Server
## @descriptionEnd
##
postfix:
  ## @param postfix.enabled Enable internal postfix
  ##
  enabled: true
  ## @skip postfix.fullnameOverride
  fullnameOverride: postfix # remapping chart agh/postfix -> postfix
  ## Internal postfix image
  ## ref: https://github.com/Leukocyte-Lab/helm-charts/tree/main/charts/postfix
  ## @param postfix.image.repository Internal postfix image repository
  ## @param postfix.image.tag Internal postfix image tag (immutable tags are recommended)
  ## @param postfix.image.pullPolicy Internal postfix image pull policy
  ## @param postfix.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    repository: leukocyte-lab/argushack3/postfix
    tag: production
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @section Postfix service provisioning parameters
  ## @descriptionStart
  ## Leave as default if using internal Postfix
  ## @descriptionEnd
  ##
  ## @param postfix.service.type Postfix service type
  ## @param postfix.service.port Postfix service port
  ##
  service:
    type: ClusterIP
    port: 25
  ## @param postfix.dkim.image.repository Internal DKIM image repository
  ## @param postfix.dkim.image.tag Internal DKIM image tag (immutable tags are recommended)
  ## @param postfix.dkim.image.pullPolicy Internal DKIM image pull policy
  ##
  dkim:
    image:
      repository: leukocyte-lab/argushack3/opendkim
      tag: production
      pullPolicy: IfNotPresent
  ## @param postfix.mydomain Postfix mydomain
  ## @param postfix.mail_myhostname Postfix mail_myhostname
  ## @param postfix.domain Postfix domain
  ##
  mydomain: bas-mail-test.com
  mail_myhostname: smtp.bas-mail-test.com
  domain: bas-mail-test.com
## @section Internal PostgreSQL database provisioning parameters
## @descriptionStart
## Leave as default if using external DB
## @descriptionEnd
##
postgresql:
  ## @param postgresql.enabled Enable internal database
  ##
  enabled: true
  ## @skip postgresql.fullnameOverride
  fullnameOverride: db # remapping chart bitnami/postgresql -> db
  ## Internal database image
  ## ref: https://github.com/bitnami/charts/tree/main/bitnami/postgresql/#installing-the-chart)
  ## @param postgresql.image.repository Internal database image repository
  ## @param postgresql.image.tag Internal database image tag (immutable tags are recommended)
  ## @param postgresql.image.pullPolicy Internal database image pull policy
  ## @param postgresql.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    repository: docker/bitnami/postgresql
    tag: 15.7.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @param postgresql.auth.enabled Enable postgresql auth secret generate
  ## @param postgresql.auth.username Internal database initial user
  ## @param postgresql.auth.password Internal database initial password
  ## @param postgresql.auth.postgresPassword Internal database initial postgres admin password
  ##
  auth:
    ## @skip postgresql.auth.existingSecret
    ## Name of the generated/existed db secret
    ## !!! DO NOT CHANGE IF YOU DON'T KNOW WHAT YOU ARE DOING !!!
    ##
    existingSecret: "agh-db-secret"
    enabled: true
    username: argushack
    password: ""
    postgresPassword: ""
  ## @param postgresql.primary.extendedConfiguration Extended configuration for the primary node
  ## @param postgresql.primary.initdb.enabled Enable initdb scripts generation
  ## @param postgresql.primary.initdb.scriptsConfigMap Name of ConfigMap containing db-init scripts
  ## @param postgresql.primary.initdb.user Specify the PostgreSQL username to execute the initdb scripts
  ## @param postgresql.primary.initdb.password Specify the PostgreSQL password to execute the initdb scripts
  ##
  primary:
    extendedConfiguration: |
      max_connections = 32768
      shared_buffers = 4GB
    initdb:
      enabled: true
      scriptsConfigMap: "db-init-scripts"
      user: argushack
      password: ""
## @section Minio parameters
##
minio:
  connection:
    ## @param minio.connection.type Choose to use external DB or internal DB
    ## internal` or `external` in string
    ## Set `minio.image` when internal is in use
    ##
    type: internal
    ## @param minio.connection.host Database host address
    ## IP or FQDN in string
    ## Required if `minio.type` is external, ignored if internal
    ##
    host: database.example.com
    ## @param minio.connection.port Database host port
    ## Port in number
    ##
    port: 9000
    ## @param minio.connection.user Database user
    ## DB User in string
    ##
    user: argushack
    ## @param minio.connection.password Database password
    ## DB Password in string
    ##
    password: ""
  ## @param minio.secret.enabled Enable minio secret generation
  ## @param minio.secret.secretName Name of the generated secret
  ##
  secret:
    enabled: true
    secretName: minio-secret
  ## @section Internal minio provisioning parameters
  ## @descriptionStart
  ## Leave as default if using external DB
  ## @descriptionEnd
  ##
  internal:
    ## @param minio.internal.enabled Enable internal minio
    ##
    enabled: true
  ## @skip minio.fullnameOverride
  ##
  fullnameOverride: minio # remapping chart bitnami/minio -> minio
  ## MinIO image
  ## @param minio.image.repository Internal MinIO image repository
  ## @param minio.image.tag Internal MinIO image tag (immutable tags are recommended)
  ## @param minio.image.pullPolicy Internal MinIO image pull policy
  ## @param minio.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    repository: docker/bitnami/minio
    tag: 2024.11.7-debian-12-r2
    pullPolicy: IfNotPresent
    pullSecrets: []
  # MinIO Client image
  ## @param minio.clientImage.repository Internal MinIO image repository
  ## @param minio.clientImage.tag Internal MinIO image tag (immutable tags are recommended)
  ## @param minio.clientImage.pullPolicy Internal MinIO image pull policy
  ## @param minio.clientImage.pullSecrets Specify docker-registry secret names as an array
  ##
  clientImage:
    repository: docker/bitnami/minio-client
    tag: 2024.11.17-debian-12-r1
    pullPolicy: IfNotPresent
    pullSecrets: []
  helpers:
    ## Minio Connection Test image
    ## @param minio.helpers.test.image.repository Minio Connection Test image repository
    ## @param minio.helpers.test.image.tag Minio Connection Test image tag (immutable tags are recommended)
    ## @param minio.helpers.test.image.pullPolicy Minio Connection Test image pull policy
    ## @param minio.helpers.test.image.pullSecrets Specify docker-registry secret names as an array
    ##
    test:
      image:
        repository: docker/curlimages/curl
        tag: 8.15.0
        pullPolicy: IfNotPresent
        pullSecrets: []
    ## Minio Bucket Test image
    ## @param minio.helpers.bucket.image.repository Minio Bucket Test image repository
    ## @param minio.helpers.bucket.image.tag Minio Bucket Test image tag(immutable tags are recommended)
    ## @param minio.helpers.bucket.image.pullPolicy Minio Bucket Test image pull policy
    ## @param minio.helpers.bucket.image.pullSecrets Specify docker-registry secret names as an array
    ##
    bucket:
      image:
        repository: docker/minio/mc
        tag: RELEASE.2025-07-16T15-35-03Z
        pullPolicy: IfNotPresent
        pullSecrets: []
  ## @param minio.auth.rootUser Internal database root user
  ## @param minio.auth.rootPassword Internal database root password
  ##
  auth:
    rootUser: argushack
    rootPassword: ""
  ## @param minio.provisioning.enabled Enable minio provisioning
  ## @param minio.provisioning.generateUser Enable minio user generation
  ##
  provisioning:
    enabled: true
    generateUser: true
    ## @skip minio.provisioning.buckets
    buckets:
      - name: intelli-bridge
        versioning: true
      - name: embedding
        versioning: true
      - name: packet
      - name: integration
      - name: report-setting
      - name: review
    ## @skip minio.provisioning.policies
    ## @skip minio.provisioning.usersExistingSecrets
    ##
    policies:
      - name: agh-controller-policy
        statements:
          - effect: "Allow"
            resources:
              - "arn:aws:s3:::*"
            actions:
              - "s3:GetBucketLocation"
              - "s3:ListBucket"
              - "s3:GetObject"
      - name: agh-parser-policy
        statements:
          - effect: "Allow"
            resources:
              - "arn:aws:s3:::intelli-bridge/*"
              - "arn:aws:s3:::intelli-bridge"
              - "arn:aws:s3:::embedding/*"
              - "arn:aws:s3:::embedding"
              - "arn:aws:s3:::integration/*"
              - "arn:aws:s3:::integration"
              - "arn:aws:s3:::review/*"
              - "arn:aws:s3:::review"
            actions:
              - "s3:GetBucketLocation"
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:ListBucket"
              - "s3:HeadBucket"
      - name: agh-packet-policy
        statements:
          - effect: "Allow"
            resources:
              - "arn:aws:s3:::packet/*"
              - "arn:aws:s3:::packet"
            actions:
              - "s3:GetBucketLocation"
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:ListBucket"
              - "s3:HeadBucket"
    usersExistingSecrets:
      - agh-minio-users-secret
  ## @param minio.extraEnvVarsCM
  ##
  extraEnvVarsCM: agh-minio-cm
  persistence:
    ## @param persistence.mountPath Data volume mount path
    ##
    mountPath: /data
## @section Kueue parameters
kueue:
  ## @param kueue.enabled Enable internal kueue
  enabled: false
  ## @skip kueue.fullnameOverride
  fullnameOverride: kueue
  queueName:
    ## @param kueue.queueName.cluster Cluster queue name
    ## @param kueue.queueName.local Local queue name
    cluster: agh3-cluster-pool
    local: agh3-local-pool
  ## @param kueue.concurrentJobs Number of concurrent jobs
  concurrentJobs: 100
## @section Redis parameters
##
redis:
  ## @param redis.enabled Enable internal redis
  enabled: true
  ## @skip redis.fullnameOverride
  ## @skip redis.architecture
  fullnameOverride: redis # remapping chart bitnami/redis -> redis
  architecture: standalone
  image:
    ## @param redis.image.repository Internal Redis image repository
    ## @param redis.image.tag Internal Redis image tag (immutable tags are recommended)
    ## @param redis.image.pullPolicy Internal Redis image pull policy
    ## @param redis.image.pullSecrets Specify docker-registry secret names as an array
    repository: docker/bitnami/redis
    tag: 7.4.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  secret:
    ## @param redis.secret.secretName Name of the generated secret
    ## @param redis.secret.password Redis password
    secretName: agh-redis-secret
    password: ""
  auth:
    ## @skip redis.auth.existingSecret
    ## @skip redis.auth.existingSecretPasswordKey
    ## @skip redis.auth.usePasswordFileFromSecret
    existingSecret: "agh-redis-secret"
    existingSecretPasswordKey: "password"
  helpers:
    ## Redis Connection Test image
    ## @param redis.helpers.test.image.repository Redis Connection Test image repository
    ## @param redis.helpers.test.image.tag Redis Connection Test image tag (immutable tags are recommended)
    ## @param redis.helpers.test.image.pullPolicy Redis Connection Test image pull policy
    ## @param redis.helpers.test.image.pullSecrets Specify docker-registry secret names as an array
    ##
    test:
      image:
        repository: docker/library/redis
        tag: 7-alpine
        pullPolicy: IfNotPresent
        pullSecrets: []
## @section RabbitMQ parameters
##
rabbitmq:
  ## @param rabbitmq.queueName Name of the RabbitMQ queue
  queueName: action_crd_result
  loadDefinition:
    enabled: true
    existingSecret: agh-rabbitmq-secret
  connection:
    ## @param rabbitmq.connection.type Choose to use external RabbitMQ or internal RabbitMQ
    ## internal` or `external` in string
    ## Set `rabbitmq.image` when internal is in use
    ##
    type: internal
    ## @param rabbitmq.connection.protocol RabbitMQ protocol
    ##
    protocol: amqp
    ## @param rabbitmq.connection.host RabbitMQ host address
    ## IP or FQDN in string
    ## Required if `rabbitmq.type` is external, ignored if internal
    ##
    host: mq.example.com
    ## @param rabbitmq.connection.port RabbitMQ host port
    ## Port in number
    ##
    port: 5672
    ## @param rabbitmq.connection.user RabbitMQ user
    ## RabbitMQ User in string
    ##
    user: argushack
    ## @param rabbitmq.connection.password RabbitMQ password
    ## RabbitMQ Password in string
    ##
    password: ""
  ## @param rabbitmq.secret.enabled Enable rabbitmq secret generation
  ## @param rabbitmq.secret.secretName Name of the generated secret
  ##
  secret:
    enabled: true
    secretName: agh-rabbitmq-secret
  ## @section Internal RabbitMQ provisioning parameters
  ## @descriptionStart
  ## Leave as default if using external RabbitMQ
  ## @descriptionEnd
  ##
  internal:
    ## @param rabbitmq.internal.enabled Enable internal rabbitmq
    ##
    enabled: true
  ## @skip rabbitmq.fullnameOverride
  ##
  fullnameOverride: rabbitmq # remapping chart bitnami/rabbitmq -> rabbitmq
  ## RabbitMQ image
  ## @param rabbitmq.image.repository Internal RabbitMQ image repository
  ## @param rabbitmq.image.tag Internal RabbitMQ image tag (immutable tags are recommended)
  ## @param rabbitmq.image.pullPolicy Internal RabbitMQ image pull policy
  ## @param rabbitmq.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    repository: docker/bitnami/rabbitmq
    tag: 3.12.13-debian-12-r2
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @skip rabbitmq.auth.existingPasswordSecret
  ## @skip rabbitmq.auth.existingSecretPasswordKey
  ## @skip rabbitmq.auth.securePassword
  ## @skip rabbitmq.auth.username
  ## Name of the generated/existed rabbitmq secret
  ## !!! DO NOT CHANGE IF YOU DON'T KNOW WHAT YOU ARE DOING !!!
  ##
  auth:
    existingPasswordSecret: "agh-rabbitmq-secret"
    existingSecretPasswordKey: "password"
    securePassword: false
    username: argushack
  ## @section RabbitMQ service provisioning parameters
  ## @descriptionStart
  ## Leave as default if using external RabbitMQ
  ## @descriptionEnd
  ##
  service:
    ## Service ports
    ## @param rabbitmq.service.ports.amqp Amqp service port
    ## @param rabbitmq.service.ports.amqpTls Amqp TLS service port
    ## @param rabbitmq.service.ports.dist Erlang distribution service port
    ## @param rabbitmq.service.ports.manager RabbitMQ Manager service port
    ## @param rabbitmq.service.ports.metrics RabbitMQ Prometheues metrics service port
    ## @param rabbitmq.service.ports.epmd EPMD Discovery service port
    ##
    ports:
      amqp: 5672
      amqpTls: 5671
      dist: 25672
      manager: 15672
      metrics: 9419
      epmd: 4369
  ## @section Helper parameters
  ## @descriptionStart
  ## Control the DB Helper behaviors.
  ## @descriptionEnd
  ##
  helpers:
    test:
      ## RabbitMQ Connection Test image
      ## @param rabbitmq.helpers.test.image.repository RabbitMQ Connection Test image repository
      ## @param rabbitmq.helpers.test.image.tag RabbitMQ Connection Test image tag (immutable tags are recommended)
      ## @param rabbitmq.helpers.test.image.pullPolicy RabbitMQ Connection Test image pull policy
      ## @param rabbitmq.helpers.test.image.pullSecrets Specify docker-registry secret names as an array
      ##
      image:
        repository: docker/curlimages/curl
        tag: 7.78.0
        pullPolicy: IfNotPresent
        pullSecrets: []
## @section AGH3-Action-Loop parameters
## @descriptionStart
## Action Loop module for AGH3.
## ref: https://github.com/Leukocyte-Lab/AGH3-Captain
## @descriptionEnd
##
actionLoop:
  ## @param actionLoop.enabled Enable Action Loop module
  ##
  enabled: true
  ## @param actionLoop.replicaCount Number of Action Loop replicas
  ##
  replicaCount: 3
  ## @param actionLoop.image.repository Action Loop image repository
  ## @param actionLoop.image.tag Action Loop image tag (immutable tags are recommended)
  ## @param actionLoop.image.pullPolicy Action Loop image pull policy
  ## @param actionLoop.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    repository: leukocyte-lab/argushack3/ctr-actionloop
    tag: v1.15.7
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @param actionLoop.serviceAccount.create Create serviceAccount for Action Loop
  ## @param actionLoop.serviceAccount.name Name of the serviceAccount for Action Loop
  ##
  serviceAccount:
    create: true
    name: action-loop-sa
  ## @param actionLoop.rbac.create Create RBAC for Action Loop
  ##
  rbac:
    create: true
## @section AGH3-Captain parameters
## @descriptionStart
## Captain module for AGH3.
## ref: https://github.com/Leukocyte-Lab/AGH3-Captain
## @descriptionEnd
##
captain:
  ## @param captain.enabled Enable Captain module
  ##
  enabled: true
  ## @param captain.image.repository Captain image repository
  ## @param captain.image.tag Captain image tag (immutable tags are recommended)
  ## @param captain.image.pullPolicy Captain image pull policy
  ## @param captain.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    repository: leukocyte-lab/argushack3/ctr-captain
    tag: v1.15.7
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @param captain.secret.enabled Enable secret generate for Captain
  ##
  secret:
    enabled: true # Manually create secrets named as the value of `captain.secret.name` if set to false
    ## @param captain.secret.db.enabled Enable secret generate for Captain database
    ## @param captain.secret.db.name Database name
    ## @param captain.secret.db.user Database user
    ## @param captain.secret.db.password Database password
    ##
    db:
      ## @skip captain.secret.db.secretName
      ## Secret name for Captain DB
      ## !!! DO NOT CHANGE IF YOU DON'T KNOW WHAT YOU ARE DOING !!!
      ##
      secretName: capt-db-secret
      enabled: true
      name: captain-db
      user: "agh-captain"
      password: ""
    ## @param captain.secret.minio.enabled Enable secret generate for Minio
    ## @param captain.secret.minio.secretName Secret name for Minio
    ## @param captain.secret.minio.user Minio user
    ## @param captain.secret.minio.password Minio password
    ## @param captain.secret.minio.resourcesPreset Minio resources preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge)
    ##
    minio:
      enabled: true
      secretName: capt-minio-secret
      user: "capt-minio-user"
      password: ""
      resourcesPreset: "small"
    ## @param captain.secret.jwt.enabled Enable secret generate for JWT
    ## @param captain.secret.jwt.secretName Secret name for JWT
    ## @param captain.secret.jwt.secret JWT secret
    ##
    jwt:
      enabled: true
      secretName: capt-jwt-secret
      secret: ""
    ## @param captain.secret.superadmin.enabled Enable secret generate for Super Admin
    ## @param captain.secret.superadmin.secretName Secret name for Super Admin
    ## @param captain.secret.superadmin.password Super Admin password
    ##
    superadmin:
      enabled: true
      secretName: capt-superadmin-password
      password: ""
    ## @param captain.secret.oidc.enabled Enable secret generate for OIDC
    ## @param captain.secret.oidc.secretName Secret name for OIDC
    ## @param captain.secret.oidc.url OIDC user
    ## @param captain.secret.oidc.clientID OIDC user
    ## @param captain.secret.oidc.clientSecret OIDC password
    ## @param captain.secret.oidc.realm OIDC realm
    ##
    oidc:
      enabled: false
      secretName: capt-oidc-secret
      url: ""
      clientID: ""
      clientSecret: ""
      realm: ""
  ## @param captain.serviceAccount.create Create serviceAccount for Captain
  ## @param captain.serviceAccount.name Name of the serviceAccount for Captain
  ##
  serviceAccount:
    create: true
    name: captain-sa
  ## @param captain.rbac.create Create RBAC for Captain
  ##
  rbac:
    create: true
  ## @param captain.extraEnv Captain additional environment variables
  ##
  extraEnv: {}
## @section packet parameters
## @descriptionStart
## Packet module for AGH3.
## descriptionEnd
packet:
  ## @param packet.secret.enabled Enable secrete generate for packet
  ##
  secret:
    ## @param packet.secret.enabled Enable secret generate for packet
    ##
    enabled: true
    ## @param packet.secret.minio.enabled Enable secret generate for Minio
    ## @param packet.secret.minio.secretName Secret name for Minio
    ## @param packet.secret.minio.user Minio user
    ## @param packet.secret.minio.password Minio password
    ##
    minio:
      enabled: true
      secretName: packet-minio-secret
      user: "packet-minio-user"
      password: ""
## @section ai-parser parameters
## @descriptionStart
## AI Parser module for AGH3.
## @descriptionEnd
parser:
  ## @param parser.secret.minio.enabled Enable secrete generate for parser
  ##
  secret:
    ## @param parser.secret.minio.enabled Enable secret generate for Parser
    ##
    enabled: true
    ## @param parser.secret.minio.enabled Enable secret generate for Minio
    ## @param parser.secret.minio.secretName Secret name for Minio
    ## @param parser.secret.minio.user Minio user
    ## @param parser.secret.minio.password Minio password
    ##
    minio:
      enabled: true
      secretName: parser-minio-secret
      user: "parser-minio-user"
      password: ""
    ## @param parser.secret.sa.enabled Enable secret generate for Parser service account
    ## @param parser.secret.sa.secretName Secret name for Parser service account
    ## @param parser.secret.sa.json Parser service account JSON
    ##
    sa:
      enabled: false
      secretName: parser-sa-secret
      json: |-
        {
          "type": "service_account",
        }
## @section AGH3-Controller parameters
## @descriptionStart
## Controller module for AGH3.
## ref: https://github.com/Leukocyte-Lab/AGH3-Controller
## @descriptionEnd
##
controller:
  ## @param controller.enabled Enable Controller module
  ##
  enabled: true
  ## @param controller.image.repository Controller image repository
  ## @param controller.image.tag Controller image tag (immutable tags are recommended)
  ## @param controller.image.pullPolicy Controller image pull policy
  ## @param controller.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    repository: leukocyte-lab/argushack3/ctr-controller
    tag: v1.2.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @param controller.secret.enabled Enable secret generate for Controller
  ##
  secret:
    enabled: true # Manually create secrets named as the value of `controller.secret.name` if set to false
    ## @param controller.secret.minio.enabled Enable secret generate for Minio
    ## @param controller.secret.minio.secretName Secret name for Minio
    ## @param controller.secret.minio.user Minio user
    ## @param controller.secret.minio.password Minio password
    ##
    minio:
      enabled: true
      secretName: executor-minio-secret
      user: "executor-minio-user"
      password: ""
  ## @param controller.serviceAccount.create Create serviceAccount for Controller
  ## @param controller.serviceAccount.name Name of the serviceAccount for Controller
  ##
  serviceAccount:
    create: true
    name: controller-sa
  ## @param controller.rbac.create Create RBAC for Controller
  ##
  rbac:
    create: true
  ## @extra controller.env Controller environment variables
  ## @param controller.env.REGISTRY_URL Controller registry URL
  ##
  env:
    REGISTRY_URL: "registry.lkc-lab.com"
  ## @param controller.extraEnv Controller additional environment variables
  ##
  extraEnv: {}
## @section AGH3-UI parameters
## @descriptionStart
## UI module for AGH3.
## ref: https://github.com/Leukocyte-Lab/AGH3-UI
## @descriptionEnd
##
ui:
  ## @param ui.enabled Enable UI module
  ##
  enabled: true
  ## @param ui.image.repository UI image repository
  ## @param ui.image.tag UI image tag (immutable tags are recommended)
  ## @param ui.image.pullPolicy UI image pull policy
  ## @param ui.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    repository: leukocyte-lab/argushack3/ctr-ui
    tag: v1.13.8
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @param ui.extraEnv UI additional environment variables
  ##
  extraEnv: {}
## @section AGH3-Report parameters
## @descriptionStart
## Report module for AGH3.
## ref: https://github.com/Leukocyte-Lab/AGH3-Report
## @descriptionEnd
##
report:
  ## @param report.enabled Enable Report module
  ##
  enabled: true
  ## @param report.image.repository Report image repository
  ## @param report.image.tag Report image tag (immutable tags are recommended)
  ## @param report.image.pullPolicy Report image pull policy
  ## @param report.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    repository: leukocyte-lab/argushack3/report
    tag: v1.2.6
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @param report.extraEnv UI additional environment variables
  ##
  extraEnv: {}
## @section cluster-feature-enabler parameters
clusterFeatureEnabler:
  ## @param clusterFeatureEnabler.enabled Enable Cluster Feature Enabler module
  ##
  enabled: true
  ## @param clusterFeatureEnabler.image.repository Cluster Feature Enabler image repository
  ## @param clusterFeatureEnabler.image.tag Cluster Feature Enabler image tag (immutable tags are recommended)
  ## @param clusterFeatureEnabler.image.pullPolicy Cluster Feature Enabler image pull policy
  ## @param clusterFeatureEnabler.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    repository: docker/bitnami/kubectl
    tag: "1.28.15-debian-12-r5"
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @param clusterFeatureEnabler.serviceAccount.create Create serviceAccount for Cluster Feature Enabler
  ## @param clusterFeatureEnabler.serviceAccount.name Name of the serviceAccount for Cluster Feature Enabler
  ##
  serviceAccount:
    create: true
    name: cluster-feature-enabler-sa
  jobs:
    ## @param clusterFeatureEnabler.jobs.sidecarContainers.enabled Enable Sidecar Containers feature enabler job
    sidecarContainers:
      name: sidecar-containers-feature-enabler
      enabled: true
## @section Vector parameters
## @descriptionStart
## Vector observability agent for AGH3 captain, action-loop, and controller modules.
## ref: https://vector.dev
## @descriptionEnd
##
vector:
  ## @param vector.enabled Enable Vector observability agent for captain, action-loop and controller
  ##
  enabled: false
  ## @param vector.image.repository Vector image repository
  ## @param vector.image.tag Vector image tag (immutable tags are recommended)
  ##
  image:
    repository: timberio/vector
    tag: latest-debian
## @section Grafana parameters
## @descriptionStart
## Grafana dashboard service for visualizing metrics, logs, and traces.
## ref: https://grafana.com/docs/grafana/latest/setup-grafana/installation/helm/
## @descriptionEnd
##
grafana:
  ## @param grafana.enabled Enable Grafana
  ##
  enabled: false
  ## @param grafana.image.repository Grafana image repository
  ##
  image:
    repository: docker/grafana/grafana
  ## @param grafana.initChownData.image.repository Init container image repository for setting data directory ownership
  ##
  initChownData:
    enabled: false
    image:
      repository: docker/busybox
  ## @param grafana.downloadDashboardsImage.repository Image repository used to download dashboards
  ##
  downloadDashboardsImage:
    repository: docker/curlimages/curl
  ## @param grafana.persistence.enabled Enable Grafana persistence
  ## @param grafana.persistence.type Persistence type for Grafana (pvc or other supported types)
  ##
  persistence:
    enabled: true
    type: pvc
  ## @param grafana.fullnameOverride Fullname override for Grafana
  ##
  fullnameOverride: grafana
## @section Grafana Tempo parameters
## @descriptionStart
## Grafana Tempo distributed tracing backend.
## ref: https://artifacthub.io/packages/helm/bitnami/grafana-tempo
## @descriptionEnd
##
grafana-tempo:
  ## @param grafana-tempo.enabled Enable Grafana Tempo
  ##
  enabled: false
  image:
    repository: docker/bitnami/grafana-tempo
  tempo:
    ## @param grafana-tempo.tempo.image.repository Tempo image repository
    ##
    image:
      repository: docker/bitnami/grafana-tempo
    traces:
      otlp:
        grpc: true
  queryFrontend:
    ## @param grafana-tempo.queryFrontend.image.repository Tempo query frontend image repository
    ##
    image:
      repository: docker/bitnami/grafana-tempo-query
  vulture:
    ## @param grafana-tempo.vulture.image.repository Tempo vulture image repository
    ##
    image:
      repository: docker/bitnami/grafana-tempo-vulture
  volumePermissions:
    ## @param grafana-tempo.volumePermissions.image.repository Image repository for setting volume permissions
    ##
    image:
      repository: docker/bitnami/os-shell
      tag: 12-debian-12-r49
  ## @param grafana-tempo.ingester.resources.requests.memory Ingester memory requests
  ## @param grafana-tempo.ingester.resources.requests.cpu Ingester CPU requests
  ## @param grafana-tempo.ingester.resources.limits.memory Ingester memory limits
  ## @param grafana-tempo.ingester.resources.limits.cpu Ingester CPU limits
  ## Need to prevent OOMKilled
  ingester:
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "2Gi"
        cpu: "1000m"
  memcached:
    enabled: false
  externalMemcached:
    ## @param grafana-tempo.externalMemcached.host External memcached host address
    ## IP or FQDN in string
    ##
    host: memcached.agh.svc.cluster.local
    ## @param grafana-tempo.externalMemcached.port External memcached port
    ## Port in number
    ##
    port: 11211
  ## @param grafana-tempo.fullnameOverride Fullname override for Grafana Tempo
  ##
  fullnameOverride: grafana-tempo
## @section Grafana Loki parameters
## @descriptionStart
## Grafana Loki log aggregation system.
## ref: https://artifacthub.io/packages/helm/bitnami/grafana-loki
## @descriptionEnd
##
grafana-loki:
  ## @param grafana-loki.enabled Enable Grafana Loki
  ##
  enabled: false
  loki:
    ## @param grafana-loki.loki.image.repository Loki image repository
    ## @param grafana-loki.loki.image.tag Loki image tag (immutable tags are recommended)
    ##
    image:
      repository: docker/bitnami/grafana-loki
      tag: 3.5.3-debian-12-r0
  gateway:
    ## @param grafana-loki.gateway.image.repository Loki gateway image repository
    ## @param grafana-loki.gateway.image.tag Loki gateway image tag
    ##
    image:
      repository: docker/bitnami/nginx
      tag: 1.29.0-debian-12-r5
  volumePermissions:
    ## @param grafana-loki.volumePermissions.image.repository Image repository for setting volume permissions
    ## @param grafana-loki.volumePermissions.image.tag Image tag for setting volume permissions
    ##
    image:
      repository: docker/bitnami/os-shell
      tag: 12-debian-12-r49
  ## @param grafana-loki.grafanaalloy.enabled Enable integration with Grafana Alloy
  ##
  grafanaalloy:
    enabled: false
  ## @param grafana-loki.memcachedchunks.enabled Enable memcached for chunks caching
  ##
  memcachedchunks:
    enabled: false
  ## @param grafana-loki.externalMemcachedChunks.host External memcached host address
  ## IP or FQDN in string
  ##
  externalMemcachedChunks:
    host: memcached.agh.svc.cluster.local
    port: 11211
  ## @param grafana-loki.memcachedfrontend.enabled Enable memcached for frontend caching
  ##
  memcachedfrontend:
    enabled: false
  ## @param grafana-loki.externalMemcachedFrontend.host External memcached host address
  ## IP or FQDN in string
  ##
  externalMemcachedFrontend:
    host: memcached.agh.svc.cluster.local
    port: 11211
  ## @param grafana-loki.fullnameOverride Fullname override for Grafana Loki
  ##
  fullnameOverride: grafana-loki
## @section Memcached parameters
## @descriptionStart
## Memcached distributed caching system.
## ref: https://artifacthub.io/packages/helm/bitnami/memcached
## @descriptionEnd
##
memcached:
  enabled: false
  image:
    repository: docker/bitnami/memcached
    tag: 1.6.39-debian-12-r0
  ## @param memcached.fullnameOverride Fullname override for Memcached
  ##
  fullnameOverride: memcached
