{{- if .Values.rabbitmq.secret.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.rabbitmq.secret.secretName }}
  labels:
    {{- include "AGH3.labels" . | nindent 4 }}
stringData:
{{- $password := default .Values.rabbitmq.connection.password (
  include "specify-password"
    (
      dict
        "domain" (default .Values.ingress.host "app.argushack.com")
        "token" .Values.keygen.apiToken
        "prefix" .Values.rabbitmq.secret.secretName
    )
) }}
  username: {{ .Values.rabbitmq.connection.user }}
  password: {{ print $password | quote }}
  load_definition.json: |
    {
      "users": [
        {
          "name": "{{ .Values.rabbitmq.connection.user }}",
          "password": {{ print $password | quote }},
          "tags": "administrator"
        }
      ],
      "queues":[
        {
          "name": "{{ .Values.rabbitmq.queueName }}",
          "vhost":"/",
          "durable":true,
          "auto_delete":false,
          "arguments":{}
        }
      ],
      "vhosts": [
        {
          "name": "/"
        }
      ],
      "permissions": [
        {
          "user": "{{ .Values.rabbitmq.connection.user }}",
          "vhost": "/",
          "configure": ".*",
          "write": ".*",
          "read": ".*"
        }
      ]
    }
  uri: {{ include "rabbitmq-connection-string"
    (
      dict
        "rabbitmq" (
          merge
            (
              dict
                "protocol" "amqp"
                "port"     .Values.rabbitmq.service.ports.amqp
                "password" $password
            )
            .Values.rabbitmq.connection
        )
        "context" $
    ) | quote }}
  manager-uri: {{ include "rabbitmq-connection-string"
    (
      dict
        "rabbitmq" (
          merge
            (
              dict
                "protocol" "http"
                "port"     .Values.rabbitmq.service.ports.manager
                "password" $password
            )
            .Values.rabbitmq.connection
        )
        "context" $
    ) | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.rabbitmq.secret.secretName }}-connection
  labels:
    {{- include "AGH3.labels" . | nindent 4 }}
type: Opaque
stringData:
{{- $password := default .Values.rabbitmq.connection.password (
  include "specify-password"
    (
      dict
        "domain" (default .Values.ingress.host "app.argushack.com")
        "token" .Values.keygen.apiToken
        "prefix" .Values.rabbitmq.secret.secretName
    )
) }}
  RABBITMQ_CONN_STR: {{ include "rabbitmq-connection-string"
    (
      dict
        "rabbitmq" (
          merge
            (
              dict
                "protocol" "amqp"
                "port"     .Values.rabbitmq.service.ports.amqp
                "password" $password
            )
            .Values.rabbitmq.connection
        )
        "context" $
    ) | quote }}
{{- end }}
