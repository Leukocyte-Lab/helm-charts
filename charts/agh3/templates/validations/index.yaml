{{- $errorMsg := "" -}}

{{- if .Values.customRegistrySecret.enabled -}}
  {{- $errorMsg = printf "%s\n%s"
      $errorMsg
      (
        include "validations.required" (
          dict
            "path" "customRegistrySecret.auth"
            "fields" (list "registry" "username" "password")
            "msg" "Must provide when customRegistrySecret.enabled is true"
            "context" $
        )
      )
  -}}
{{- end -}}

{{- if .Values.ingress.tls.enabled -}}
  {{- $errorMsg = printf "%s\n%s"
      $errorMsg
      (
        include "validations.required" (
          dict
            "path" "ingress.tls"
            "fields" (list "cert" "key")
            "msg" "Must provide when ingress.tls.enabled is true"
            "context" $
        )
      )
  -}}
{{- end -}}

{{- if eq .Values.db.connection.type "external" -}}
  {{- $errorMsg = printf "%s\n%s"
      $errorMsg
      (
        include "validations.required" (
          dict
            "path" "db.connection"
            "fields" (list "host" "port")
            "msg" "Must provide when db.connection is external"
            "context" $
        )
      )
  -}}
{{- end -}}

{{- if eq .Values.rabbitmq.connection.type "external" -}}
  {{- $errorMsg = printf "%s\n%s"
      $errorMsg
      (
        include "validations.required" (
          dict
            "path" "rabbitmq.connection"
            "fields" (list "host" "port")
            "msg" "Must provide when rabbitmq.connection is external"
            "context" $
        )
      )
  -}}
{{- end -}}

{{- if eq .Values.minio.connection.type "external" -}}
  {{- $errorMsg = printf "%s\n%s"
      $errorMsg
      (
        include "validations.required" (
          dict
            "path" "minio.connection"
            "fields" (list "host" "port")
            "msg" "Must provide when db.connection is external"
            "context" $
        )
      )
  -}}
{{- end -}}

{{- if and .Values.captain.enabled .Values.captain.secret.oidc.enabled -}}
  {{- $errorMsg = printf "%s\n%s"
      $errorMsg
      (
        include "validations.required" (
          dict
            "path" "captain.secret.oidc"
            "fields" (list "url" "clientID" "clientSecret" "realm")
            "msg" "Must provide when captain.secret.oidc.enabled is true"
            "context" $
        )
      )
  -}}
{{- end -}}

{{- $errorMsg = (trimAll "\n" $errorMsg) -}}
{{- if not (empty $errorMsg) -}}
  {{- fail (print "\n\nValidation Failed:\n" $errorMsg) -}}
{{- end -}}
