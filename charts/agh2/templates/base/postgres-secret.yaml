{{- if and .Values.postgresql.enabled .Values.postgresql.auth.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.postgresql.auth.existingSecret }}
  labels:
    {{- include "AGH2.labels" . | nindent 4 }}
type: Opaque
stringData:
  password: {{
    default
      .Values.postgresql.auth.password
      (
        include "specify-password"
          (
            dict
              "domain" (default .Values.ingress.host "app.argushack.com")
              "token" .Values.captain.secret.keygen.apiToken
              "prefix" (printf "%s--%s" .Values.postgresql.auth.existingSecret "password")
          )
      )
    | quote
  }}
  postgres-password: {{
    default
      .Values.postgresql.auth.postgresPassword
      (
        include "specify-password"
          (
            dict
              "domain" (default .Values.ingress.host "app.argushack.com")
              "token" .Values.captain.secret.keygen.apiToken
              "prefix" (printf "%s--%s" .Values.postgresql.auth.existingSecret "postgresql-password")
          )
      )
    | quote
  }}
{{- end }}