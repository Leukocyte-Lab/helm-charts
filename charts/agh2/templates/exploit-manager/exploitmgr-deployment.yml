{{- if .Values.exploitmgr.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: exploitmgr
  labels:
    {{- include "AGH2.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: exploitmgr
  template:
    metadata:
      labels:
        app: exploitmgr
    spec:
      {{- include "exploitmgr.imagePullSecrets" . | nindent 6 }}
      initContainers:
        - name: exploitmgr-init-postgresql
          image: {{ include "db.image" . }}
          env:
            - name: PG_CONN_STR
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.exploitmgr.secret.db.secretName }}
                  key: DB_CONN_STR
          command:
            [
              "sh",
              "-c",
              "until pg_isready -d $PG_CONN_STR; do echo waiting for postgresql; sleep 1; done",
            ]
      containers:
        - name: exploitmgr
          image: {{ include "exploitmgr.image" . }}
          command:
            - ./exploitmgr
          env:
            {{- if .Values.core.enabled }}
            - name: CORE_URL
              value: "core.$(NAMESPACE).svc.cluster.local:50005"
            {{- end }}
            - name: DB_Conn
              valueFrom:
                secretKeyRef:
                  key: DB_CONN_STR
                  name: {{ .Values.exploitmgr.secret.db.secretName }}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
          ports:
            - name: grpc
              containerPort: 50005
          imagePullPolicy: {{ .Values.exploitmgr.image.pullPolicy }}
      restartPolicy: Always
{{- end }}