{{- if .Values.transformer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transformer
  labels:
    {{- include "AGH2.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: transformer
  template:
    metadata:
      labels:
        app: transformer
    spec:
      {{- include "transformer.imagePullSecrets" . | nindent 6 }}
      initContainers:
        {{- if and .Values.redis.enabled .Values.transformer.service.redis.enabled }}
        - name: transformer-init-redis
          image: {{ include "redis.image" . }}
          command:
            [
              "sh",
              "-c",
              "until redis-cli --no-auth-warning -h $REDIS_SERVICE_HOST -p $REDIS_SERVICE_PORT ping; do echo waiting for redis; sleep 1; done",
            ]
        {{- end }}
      containers:
        - name: transformer
          image: {{ include "transformer.image" . }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if and .Values.redis.enabled .Values.transformer.service.redis.enabled }}
            - name: ENV_REDIS_CONN
              value: "redis://redis.$(NAMESPACE).svc.cluster.local:6379/0"
            {{- end }}
            {{- if .Values.core.enabled }}
            - name: CORE_URL
              value: "core.$(NAMESPACE).svc.cluster.local:50005"
            {{- end }}
            {{- if .Values.transformer.extraEnv }}
            {{- include "common.tplvalues.render" (dict "value" .Values.transformer.extraEnv "context" $) | nindent 12 }}
            {{- end }}
          command: ["./transformer"]
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
          ports:
            - name: grpc
              containerPort: 50005
          imagePullPolicy: {{ .Values.transformer.image.pullPolicy }}
      restartPolicy: "Always"
{{- end }}
