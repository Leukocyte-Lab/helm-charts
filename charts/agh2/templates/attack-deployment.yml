{{- if .Values.attack.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: attack
  labels:
    {{- include "AGH2-helm.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: attack
  template:
    metadata:
      labels:
        app: attack
    spec:
      initContainers:
        - name: attack-init-redis
          image: registry.lkc-lab.com/docker/library/redis:6-alpine
          command:
            [
              "sh",
              "-c",
              "until redis-cli --no-auth-warning -h $REDIS_SERVICE_HOST -p $REDIS_SERVICE_PORT ping; do echo waiting for redis; sleep 1; done",
            ]
        - name: attack-init-postgresql
          image: postgres:13
          env:
            - name: PG_CONN_STR
              valueFrom:
                secretKeyRef:
                  key: DB_CONN_STR
                  name: attack-db-secret
          command:
            [
              "sh",
              "-c",
              "until pg_isready -d $PG_CONN_STR; do echo waiting for postgresql; sleep 1; done",
            ]
      containers:
        - name: attack
          image: "{{ .Values.attack.image.repository }}:{{ .Values.attack.image.tag }}"
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DB_Conn
              valueFrom:
                secretKeyRef:
                  key: DB_CONN_STR
                  name: attack-db-secret
            - name: CORE_URL
              value: "core.$(NAMESPACE).svc.cluster.local:50005"
            - name: ENV_REDIS_CONN
              value: "redis://redis.$(NAMESPACE).svc.cluster.local:6379/0"
          command: ["./attack"]
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
          ports:
            - name: http
              containerPort: 8080
          imagePullPolicy: {{ .Values.attack.image.pullPolicy }}
      imagePullSecrets:
        - name: gitlab-registry
      restartPolicy: "Always"
{{- end }}