{{- if and .Values.playground.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: playground
  labels:
    {{- include "AGH3-Playground.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: playground
  template:
    metadata:
      labels:
        app: playground
    spec:
      {{- include "playground.imagePullSecrets" . | nindent 6 }}
      containers:
        - name: playground
          image: {{ include "playground.image" . }}
          imagePullPolicy: {{ .Values.playground.image.pullPolicy }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: API_ENDPOINT
              value: {{ include "playground.apiEndpoint" . }}
            - name: AI_API_ENDPOINT
              value: {{ required "playground.service.ai.endpoint is required" .Values.playground.service.ai.endpoint | quote }}
            {{- if .Values.playground.extraEnv }}
            {{- include "common.tplvalues.render" (dict "value" .Values.playground.extraEnv "context" $) | nindent 12 }}
            {{- end }}
          ports:
            - name: web
              containerPort: 80
          {{- if .Values.playground.secret.firebase.enabled }}
          volumeMounts:
            - name: firebase-secrets
              mountPath: /usr/share/nginx/html/api/secrets/firebase.json
              subPath: firebase.json
              readOnly: true
            - name: ai-secrets
              mountPath: /usr/share/nginx/html/api/secrets/ai.json
              subPath: ai.json
              readOnly: true
          {{- end }}
      restartPolicy: Always
      {{- if .Values.playground.secret.firebase.enabled }}
      volumes:
        - name: firebase-secrets
          secret:
            secretName: {{ .Values.playground.secret.firebase.secretName }}
        - name: ai-secrets
          secret:
            secretName: {{ .Values.playground.secret.ai.secretName }}
      {{- end }}
{{- end }}
